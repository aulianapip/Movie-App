plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-parcelize'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}
apply from: '../shared_dependencies.gradle'
android {
    namespace 'com.aulia.core'
    compileSdk 34

    defaultConfig {
        minSdk 24
        targetSdk 34
        buildConfigField("String", "API_KEY", '"eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzNzQ0OGQyYTMzNWQxMjYwNDgxNDI3MDM4YWJmNGI1ZCIsInN1YiI6IjU4NGU0OThhYzNhMzY4MzIyYTAwOGE5OSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.Z-wQ76oHx43XUFjxbHExQAoxv2eJRou62oTm3i2Rtjk"')
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }

    buildFeatures {
        viewBinding = true
        buildConfig = true
    }
}

dependencies {

    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    androidTestImplementation "androidx.room:room-testing:$room_version"

    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlin_coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlin_coroutines_version"
    implementation "androidx.room:room-ktx:$room_version"
    api "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
}